# Adapted from: https://blog.logrocket.com/containerized-development-nestjs-docker/
# and: https://nodejs.org/en/docs/guides/nodejs-docker-webapp/
# and: https://medium.com/@tiangolo/angular-in-docker-with-nginx-supporting-environments-built-with-multi-stage-docker-builds-bb9f1724e984

# Standalone dashboard docker build (no api required)
# $docker build -f docker/DOCKERFILE --tag chrismclarke/odkx-dashboard .
# $docker run -p 80:80 --name odkxm --rm chrismclarke/odkx-dashboard

### STAGE 1: Build ###
FROM node:12-alpine AS build
# Set working directory
WORKDIR /usr/src/app
# Add node_modules to path
ENV PATH="./node_modules/.bin:$PATH"
# Copy dependency files to allow caching
ADD package.json ./
ADD yarn.lock ./
# Skip standard postinstall as this will be completed in next step
RUN yarn install --ignore-scripts
# Angular post-install optimisation
RUN ngcc
# Copy rest of app files
ADD . .

############### Deprecated (pass env variables to build) - Setting environment variables ###########
# Populate docker env settings to the angular build file
# RUN echo "$(node ./docker/build/setEnv.js)" > ./apps/dashboard/src/environments/docker.env.json
# Verify docker env settings
#  RUN echo "$(cat ./apps/dashboard/src/environments/docker.env.json)"
####################################################################################################

# Build the dashboard with docker env as specified in src/environments (no api proxy)
# Assumes it will be served on proxy /dashboard
RUN ["nx", "build","dashboard","--configuration=docker","--base-href=/dashboard/"]

### STAGE 2: Serve Dashboard ###
FROM nginx:1.17-alpine
# Copy build output to be served by nginx
COPY --from=build /usr/src/app/dist/apps/dashboard /usr/share/nginx/html
# Copy local nginx conf to rewrite all app routes to main entry-point (index.html)
COPY --from=build /usr/src/app/docker/build/nginx-custom.conf /etc/nginx/conf.d/default.conf
# Run the nginx server
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
